{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:805:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "70:80:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "80:22:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "95:6:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "89:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "89:13:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "80:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "138:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "111:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "111:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "111:33:2"
										}
									]
								},
								"name": "abi_decode_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "48:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "56:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "64:5:2",
										"type": ""
									}
								],
								"src": "7:143:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "233:207:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "279:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "288:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "291:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "281:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "281:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "281:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "254:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "263:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "250:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "250:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "275:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "246:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "246:32:2"
											},
											"nodeType": "YulIf",
											"src": "243:2:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "305:128:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "320:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "334:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "324:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "349:74:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "406:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "391:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "391:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "415:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "359:31:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "359:64:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "349:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "203:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "214:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "226:6:2",
										"type": ""
									}
								],
								"src": "156:284:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "491:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "501:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "530:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "512:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "512:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "501:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "473:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "483:7:2",
										"type": ""
									}
								],
								"src": "446:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "593:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "603:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "618:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "625:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "614:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "614:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "603:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "575:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "585:7:2",
										"type": ""
									}
								],
								"src": "548:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "723:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "780:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "789:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "792:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "782:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "782:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "782:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "746:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "771:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "753:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "753:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "743:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "743:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "736:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "736:43:2"
											},
											"nodeType": "YulIf",
											"src": "733:2:2"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "716:5:2",
										"type": ""
									}
								],
								"src": "680:122:2"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506040516105133803806105138339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6104058061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806313007d5514610046578063da36cffe14610064578063ecb617d914610094575b600080fd5b61004e61009e565b60405161005b9190610324565b60405180910390f35b61007e6004803603810190610079919061026f565b6100c2565b60405161008b9190610309565b60405180910390f35b61009c610175565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3ec138d836040518263ffffffff1660e01b815260040161011e91906102ee565b60206040518083038186803b15801561013657600080fd5b505afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610298565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338db6dd3336040518263ffffffff1660e01b81526004016101ce91906102ee565b600060405180830381600087803b1580156101e857600080fd5b505af11580156101fc573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd60405160405180910390a2565b600081359050610254816103a1565b92915050565b600081519050610269816103b8565b92915050565b60006020828403121561028157600080fd5b600061028f84828501610245565b91505092915050565b6000602082840312156102aa57600080fd5b60006102b88482850161025a565b91505092915050565b6102ca8161033f565b82525050565b6102d981610351565b82525050565b6102e88161037d565b82525050565b600060208201905061030360008301846102c1565b92915050565b600060208201905061031e60008301846102d0565b92915050565b600060208201905061033960008301846102df565b92915050565b600061034a8261035d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103888261038f565b9050919050565b600061039a8261035d565b9050919050565b6103aa8161033f565b81146103b557600080fd5b50565b6103c181610351565b81146103cc57600080fd5b5056fea264697066735822122044f0d9205ccf76e4265a61dc9ce1af5c241b430e69312c747c4f78c21d62d69f64736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x513 CODESIZE SUB DUP1 PUSH2 0x513 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x405 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13007D55 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xDA36CFFE EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xECB617D9 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA3EC138D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38DB6DD3 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x254 DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x3B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28F DUP5 DUP3 DUP6 ADD PUSH2 0x245 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B8 DUP5 DUP3 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D9 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E8 DUP2 PUSH2 0x37D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x303 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x339 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A DUP3 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x38F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39A DUP3 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AA DUP2 PUSH2 0x33F JUMP JUMPDEST DUP2 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3C1 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY CREATE 0xD9 KECCAK256 0x5C 0xCF PUSH23 0xE4265A61DC9CE1AF5C241B430E69312C747C4F78C21D62 0xD6 SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
			"sourceMap": "88:998:1:-:0;;;608:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;691:21;661:13;;:52;;;;;;;;;;;;;;;;;;608:112;88:998;;7:143:2;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;88:998:1:-;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:2870:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "107:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:2"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:2",
										"type": ""
									}
								],
								"src": "7:139:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "212:77:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "222:22:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "237:6:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "231:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "231:13:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "222:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "277:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "253:23:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "253:30:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "253:30:2"
										}
									]
								},
								"name": "abi_decode_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "190:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "198:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "206:5:2",
										"type": ""
									}
								],
								"src": "152:137:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "361:196:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "407:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "416:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "419:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "409:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "409:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "409:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "382:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "391:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "378:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "378:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "403:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "374:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "374:32:2"
											},
											"nodeType": "YulIf",
											"src": "371:2:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "433:117:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "448:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "462:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "452:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "477:63:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "512:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "532:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "487:20:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "487:53:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "477:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "331:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "342:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "354:6:2",
										"type": ""
									}
								],
								"src": "295:262:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "637:204:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "683:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "692:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "695:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "685:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "685:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "685:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "658:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "667:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "654:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "654:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "679:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "650:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "650:32:2"
											},
											"nodeType": "YulIf",
											"src": "647:2:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "709:125:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "724:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "738:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "728:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "753:71:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "796:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "807:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "792:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "816:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "763:28:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "763:61:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "753:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "607:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "618:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "630:6:2",
										"type": ""
									}
								],
								"src": "563:278:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "912:53:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "929:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "952:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "934:17:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "934:24:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "922:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "922:37:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "922:37:2"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "900:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "907:3:2",
										"type": ""
									}
								],
								"src": "847:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1030:50:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1047:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1067:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "1052:14:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1052:21:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1040:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1040:34:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1040:34:2"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1018:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1025:3:2",
										"type": ""
									}
								],
								"src": "971:109:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1172:87:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1189:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1246:5:2"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_AccessControl_$722_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "1194:51:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1194:58:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1182:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1182:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1182:71:2"
										}
									]
								},
								"name": "abi_encode_t_contract$_AccessControl_$722_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1160:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1167:3:2",
										"type": ""
									}
								],
								"src": "1086:173:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1363:124:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1373:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1385:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1396:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1381:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1381:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1373:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1453:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1466:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1477:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1462:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1462:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1409:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1409:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1409:71:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1335:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1347:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1358:4:2",
										"type": ""
									}
								],
								"src": "1265:222:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1585:118:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1595:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1607:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1618:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1603:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1603:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1595:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1669:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1682:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1693:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1678:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1678:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1631:37:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1631:65:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1631:65:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1557:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1569:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1580:4:2",
										"type": ""
									}
								],
								"src": "1493:210:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1828:145:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1838:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1850:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1861:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1846:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1846:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1838:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1939:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1952:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1963:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1948:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1948:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_AccessControl_$722_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1874:64:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1874:92:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1874:92:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_AccessControl_$722__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1800:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1812:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1823:4:2",
										"type": ""
									}
								],
								"src": "1709:264:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2024:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2034:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2063:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2045:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2045:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2034:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2006:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2016:7:2",
										"type": ""
									}
								],
								"src": "1979:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2123:48:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2133:32:2",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2158:5:2"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "2151:6:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2151:13:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2144:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2144:21:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2133:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2105:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2115:7:2",
										"type": ""
									}
								],
								"src": "2081:90:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2222:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2232:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2247:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2254:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "2243:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2243:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2232:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2204:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2214:7:2",
										"type": ""
									}
								],
								"src": "2177:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2390:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2400:71:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2465:5:2"
													}
												],
												"functionName": {
													"name": "convert_t_contract$_AccessControl_$722_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2413:51:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2413:58:2"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "2400:9:2"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_AccessControl_$722_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2370:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "2380:9:2",
										"type": ""
									}
								],
								"src": "2309:168:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2564:53:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2574:37:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2605:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2587:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2587:24:2"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "2574:9:2"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_AccessControl_$722_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2544:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "2554:9:2",
										"type": ""
									}
								],
								"src": "2483:134:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2666:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2723:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2732:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2735:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2725:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2725:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2725:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2689:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2714:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2696:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2686:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2686:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2679:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2679:43:2"
											},
											"nodeType": "YulIf",
											"src": "2676:2:2"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2659:5:2",
										"type": ""
									}
								],
								"src": "2623:122:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2791:76:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2845:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2854:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2857:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2847:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2847:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2847:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2814:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2836:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2821:14:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:21:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2811:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2811:32:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2804:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2804:40:2"
											},
											"nodeType": "YulIf",
											"src": "2801:2:2"
										}
									]
								},
								"name": "validator_revert_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2784:5:2",
										"type": ""
									}
								],
								"src": "2751:116:2"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_AccessControl_$722_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AccessControl_$722_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_AccessControl_$722__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AccessControl_$722_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AccessControl_$722_to_t_address(value) -> converted {\n        converted := convert_t_contract$_AccessControl_$722_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AccessControl_$722_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806313007d5514610046578063da36cffe14610064578063ecb617d914610094575b600080fd5b61004e61009e565b60405161005b9190610324565b60405180910390f35b61007e6004803603810190610079919061026f565b6100c2565b60405161008b9190610309565b60405180910390f35b61009c610175565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3ec138d836040518263ffffffff1660e01b815260040161011e91906102ee565b60206040518083038186803b15801561013657600080fd5b505afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610298565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338db6dd3336040518263ffffffff1660e01b81526004016101ce91906102ee565b600060405180830381600087803b1580156101e857600080fd5b505af11580156101fc573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd60405160405180910390a2565b600081359050610254816103a1565b92915050565b600081519050610269816103b8565b92915050565b60006020828403121561028157600080fd5b600061028f84828501610245565b91505092915050565b6000602082840312156102aa57600080fd5b60006102b88482850161025a565b91505092915050565b6102ca8161033f565b82525050565b6102d981610351565b82525050565b6102e88161037d565b82525050565b600060208201905061030360008301846102c1565b92915050565b600060208201905061031e60008301846102d0565b92915050565b600060208201905061033960008301846102df565b92915050565b600061034a8261035d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103888261038f565b9050919050565b600061039a8261035d565b9050919050565b6103aa8161033f565b81146103b557600080fd5b50565b6103c181610351565b81146103cc57600080fd5b5056fea264697066735822122044f0d9205ccf76e4265a61dc9ce1af5c241b430e69312c747c4f78c21d62d69f64736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13007D55 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xDA36CFFE EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xECB617D9 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA3EC138D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38DB6DD3 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x254 DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x3B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28F DUP5 DUP3 DUP6 ADD PUSH2 0x245 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B8 DUP5 DUP3 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D9 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E8 DUP2 PUSH2 0x37D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x303 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x339 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A DUP3 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x38F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39A DUP3 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AA DUP2 PUSH2 0x33F JUMP JUMPDEST DUP2 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3C1 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY CREATE 0xD9 KECCAK256 0x5C 0xCF PUSH23 0xE4265A61DC9CE1AF5C241B430E69312C747C4F78C21D62 0xD6 SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
			"sourceMap": "88:998:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;129:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;765:130;;;:::i;:::-;;129:34;;;;;;;;;;;;:::o;962:122::-;1026:4;1049:13;;;;;;;;;;;:20;;;1070:6;1049:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1042:35;;962:122;;;:::o;765:130::-;807:13;;;;;;;;;;:27;;;835:10;807:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:10;861:27;;;;;;;;;;;;765:130::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:262::-;;403:2;391:9;382:7;378:23;374:32;371:2;;;419:1;416;409:12;371:2;462:1;487:53;532:7;523:6;512:9;508:22;487:53;:::i;:::-;477:63;;433:117;361:196;;;;:::o;563:278::-;;679:2;667:9;658:7;654:23;650:32;647:2;;;695:1;692;685:12;647:2;738:1;763:61;816:7;807:6;796:9;792:22;763:61;:::i;:::-;753:71;;709:125;637:204;;;;:::o;847:118::-;934:24;952:5;934:24;:::i;:::-;929:3;922:37;912:53;;:::o;971:109::-;1052:21;1067:5;1052:21;:::i;:::-;1047:3;1040:34;1030:50;;:::o;1086:173::-;1194:58;1246:5;1194:58;:::i;:::-;1189:3;1182:71;1172:87;;:::o;1265:222::-;;1396:2;1385:9;1381:18;1373:26;;1409:71;1477:1;1466:9;1462:17;1453:6;1409:71;:::i;:::-;1363:124;;;;:::o;1493:210::-;;1618:2;1607:9;1603:18;1595:26;;1631:65;1693:1;1682:9;1678:17;1669:6;1631:65;:::i;:::-;1585:118;;;;:::o;1709:264::-;;1861:2;1850:9;1846:18;1838:26;;1874:92;1963:1;1952:9;1948:17;1939:6;1874:92;:::i;:::-;1828:145;;;;:::o;1979:96::-;;2045:24;2063:5;2045:24;:::i;:::-;2034:35;;2024:51;;;:::o;2081:90::-;;2158:5;2151:13;2144:21;2133:32;;2123:48;;;:::o;2177:126::-;;2254:42;2247:5;2243:54;2232:65;;2222:81;;;:::o;2309:168::-;;2413:58;2465:5;2413:58;:::i;:::-;2400:71;;2390:87;;;:::o;2483:134::-;;2587:24;2605:5;2587:24;:::i;:::-;2574:37;;2564:53;;;:::o;2623:122::-;2696:24;2714:5;2696:24;:::i;:::-;2689:5;2686:35;2676:2;;2735:1;2732;2725:12;2676:2;2666:79;:::o;2751:116::-;2821:21;2836:5;2821:21;:::i;:::-;2814:5;2811:32;2801:2;;2857:1;2854;2847:12;2801:2;2791:76;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "205800",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"accessControl()": "1232",
				"isRegisteredVoter(address)": "infinite",
				"registerVoter()": "infinite"
			}
		},
		"methodIdentifiers": {
			"accessControl()": "13007d55",
			"isRegisteredVoter(address)": "da36cffe",
			"registerVoter()": "ecb617d9"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_accessControlAddress",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_voter",
					"type": "address"
				}
			],
			"name": "VoterRegistered",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "accessControl",
			"outputs": [
				{
					"internalType": "contract AccessControl",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_voter",
					"type": "address"
				}
			],
			"name": "isRegisteredVoter",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "registerVoter",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}